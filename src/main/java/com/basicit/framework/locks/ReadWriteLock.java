package com.basicit.framework.locks;

/**
 * <h3>읽기-쓰기 잠금 인터페이스</h3>
 *
 * <p>
 * ReadWriteLock 한 쌍의 관련 잠금이 유지됩니다.，하나는 읽기 전용 작업용，다른 하나는 쓰기 작업을 위한 것입니다.
 * 없는 한 writer，읽기 잠금은 여러 사람이 보유할 수 있습니다. reader 유지하면서 실，쓰기 잠금은 배타적입니다. </br>
 * 뮤텍스에 비해，읽기-쓰기 잠금은 공유 데이터에 대한 더 높은 수준의 동시 액세스를 허용합니다.
 * 한 번에 하나의 스레드만（writer 실）공유 데이터 수정 가능，스레드 수에 관계없이 공유 데이터를 동시에 읽을 수 있습니다.（reader 실）。</br>
 * 읽기 잠금이 이미 있는 경우，그러면 쓰기 잠금을 획득할 수 없습니다.，읽기 잠금이 해제될 때까지 기다려야 합니다.
 * 쓰기 잠금이 이미 있는 경우，다른 스레드의 읽기 잠금을 획득할 수 없습니다.，그러나 동일한 스레드 내에서 읽기 잠금을 획득할 수 있습니다.
 * </p>
 *
 * @author Crackers
 */
public interface ReadWriteLock {

    /**
     * <h3>읽기 잠금 획득</h3>
     *
     * @return 읽기 잠금 개체를 반환합니다.
     */
    MutexLock readLock();

    /**
     * <h3>쓰기 잠금 획득</h3>
     *
     * @return 쓰기 잠금 개체 반환
     */
    MutexLock writeLock();

}
